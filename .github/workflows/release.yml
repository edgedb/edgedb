name: Build Test and Publish a Release

on:
  repository_dispatch:
    types: ["release"]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        target: [
          debian-stretch,
          debian-buster,
          ubuntu-xenial,
          ubuntu-bionic,
          ubuntu-focal,
          centos-7,
          centos-8,
        ]
        include:
          - target: debian-stretch
            platform: debian
            platform_version: stretch
          - target: debian-buster
            platform: debian
            platform_version: buster
          - target: ubuntu-xenial
            platform: ubuntu
            platform_version: xenial
          - target: ubuntu-bionic
            platform: ubuntu
            platform_version: bionic
          - target: ubuntu-focal
            platform: ubuntu
            platform_version: focal
          - target: centos-7
            platform: centos
            platform_version: 7
          - target: centos-8
            platform: centos
            platform_version: 8

    steps:
    - name: Determine package version
      shell: bash
      env:
        BRANCH: "${{ github.event.client_payload.branch }}"
      run: echo ::set-output name=version::${BRANCH#releases/}
      id: whichver

    - name: Build (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-stretch@master
      if: matrix.target == 'debian-stretch'
      env:
        SRC_REF: "${{ github.event.client_payload.branch }}"
        PKG_VERSION: "${{ steps.whichver.outputs.version }}"
        PKG_REVISION: "<current-date>"
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        EXTRA_OPTIMIZATIONS: "true"

    - name: Test (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/test/debian-stretch@master
      if: matrix.target == 'debian-stretch'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"

    - name: Build (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-buster@master
      if: matrix.target == 'debian-buster'
      env:
        SRC_REF: "${{ github.event.client_payload.branch }}"
        PKG_VERSION: "${{ steps.whichver.outputs.version }}"
        PKG_REVISION: "<current-date>"
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        EXTRA_OPTIMIZATIONS: "true"

    - name: Test (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/test/debian-buster@master
      if: matrix.target == 'debian-buster'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"

    - name: Build (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-xenial@master
      if: matrix.target == 'ubuntu-xenial'
      env:
        SRC_REF: "${{ github.event.client_payload.branch }}"
        PKG_VERSION: "${{ steps.whichver.outputs.version }}"
        PKG_REVISION: "<current-date>"
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        EXTRA_OPTIMIZATIONS: "true"

    - name: Test (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/test/ubuntu-xenial@master
      if: matrix.target == 'ubuntu-xenial'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"

    - name: Build (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-bionic@master
      if: matrix.target == 'ubuntu-bionic'
      env:
        SRC_REF: "${{ github.event.client_payload.branch }}"
        PKG_VERSION: "${{ steps.whichver.outputs.version }}"
        PKG_REVISION: "<current-date>"
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        EXTRA_OPTIMIZATIONS: "true"

    - name: Test (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/test/ubuntu-bionic@master
      if: matrix.target == 'ubuntu-bionic'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"

    - name: Build (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-focal@master
      if: matrix.target == 'ubuntu-focal'
      env:
        SRC_REF: "${{ github.event.client_payload.branch }}"
        PKG_VERSION: "${{ steps.whichver.outputs.version }}"
        PKG_REVISION: "<current-date>"
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        EXTRA_OPTIMIZATIONS: "true"

    - name: Test (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/test/ubuntu-focal@master
      if: matrix.target == 'ubuntu-focal'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"

    - name: Build (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/build/centos-7@master
      if: matrix.target == 'centos-7'
      env:
        SRC_REF: "${{ github.event.client_payload.branch }}"
        PKG_VERSION: "${{ steps.whichver.outputs.version }}"
        PKG_REVISION: "<current-date>"
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        EXTRA_OPTIMIZATIONS: "true"

    - name: Test (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/test/centos-7@master
      if: matrix.target == 'centos-7'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"

    - name: Build (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/build/centos-8@master
      if: matrix.target == 'centos-8'
      env:
        SRC_REF: "${{ github.event.client_payload.branch }}"
        PKG_VERSION: "${{ steps.whichver.outputs.version }}"
        PKG_REVISION: "<current-date>"
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        EXTRA_OPTIMIZATIONS: "true"

    - name: Test (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/test/centos-8@master
      if: matrix.target == 'centos-8'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"


    - uses: actions/upload-artifact@v1
      with:
        name: builds-${{ matrix.target }}
        path: artifacts/${{ matrix.target }}

  build-macos:
    runs-on: macos-latest

    strategy:
      max-parallel: 4
      matrix:
        target: [
          macos-x86_64,
        ]
        include:
          - target: macos-x86_64
            platform: macos
            platform_version: x86_64

    steps:
    - uses: actions/checkout@v1
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb/edgedb-pkg

    - name: Determine package version
      shell: bash
      env:
        BRANCH: "${{ github.event.client_payload.branch }}"
      run: echo ::set-output name=version::${BRANCH#releases/}
      id: whichver

    - name: Build (${{ matrix.target }})
      env:
        SRC_REF: "${{ github.event.client_payload.branch }}"
        PKG_VERSION: "${{ steps.whichver.outputs.version }}"
        PKG_REVISION: "<current-date>"
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
      run: |
        edgedb-pkg/integration/macos/build.sh

    - name: Test (${{ matrix.target }})
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
      run: |
        edgedb-pkg/integration/macos/test.sh

    - uses: actions/upload-artifact@v1
      with:
        name: builds-${{ matrix.target }}
        path: artifacts/${{ matrix.target }}

  publish-linux:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        target: [
          debian-stretch,
          debian-buster,
          ubuntu-xenial,
          ubuntu-bionic,
          ubuntu-focal,
          centos-7,
          centos-8,
        ]
        include:
          - target: debian-stretch
            platform: debian
            platform_version: stretch
          - target: debian-buster
            platform: debian
            platform_version: buster
          - target: ubuntu-xenial
            platform: ubuntu
            platform_version: xenial
          - target: ubuntu-bionic
            platform: ubuntu
            platform_version: bionic
          - target: ubuntu-focal
            platform: ubuntu
            platform_version: focal
          - target: centos-7
            platform: centos
            platform_version: 7
          - target: centos-8
            platform: centos
            platform_version: 8

    steps:
    - uses: actions/download-artifact@v1
      with:
        name: builds-${{ matrix.target }}
        path: artifacts/${{ matrix.target }}

    - name: Describe
      id: describe
      uses: edgedb/edgedb-pkg/integration/actions/describe-artifact@master
      with:
        target: "${{ matrix.target }}"

    - name: Publish (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/upload/debian@master
      if: matrix.target == 'debian-stretch'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

    - name: Test Published (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/testpublished/debian-stretch@master
      if: matrix.target == 'debian-stretch'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"

    - name: Publish (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/upload/debian@master
      if: matrix.target == 'debian-buster'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

    - name: Test Published (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/testpublished/debian-buster@master
      if: matrix.target == 'debian-buster'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"

    - name: Publish (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/upload/debian@master
      if: matrix.target == 'ubuntu-xenial'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

    - name: Test Published (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/testpublished/ubuntu-xenial@master
      if: matrix.target == 'ubuntu-xenial'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"

    - name: Publish (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/upload/debian@master
      if: matrix.target == 'ubuntu-bionic'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

    - name: Test Published (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/testpublished/ubuntu-bionic@master
      if: matrix.target == 'ubuntu-bionic'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"

    - name: Publish (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/upload/debian@master
      if: matrix.target == 'ubuntu-focal'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

    - name: Test Published (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/testpublished/ubuntu-focal@master
      if: matrix.target == 'ubuntu-focal'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"

    - name: Publish (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/upload/redhat@master
      if: matrix.target == 'centos-7'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

    - name: Test Published (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/testpublished/centos-7@master
      if: matrix.target == 'centos-7'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"

    - name: Publish (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/upload/redhat@master
      if: matrix.target == 'centos-8'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

    - name: Test Published (${{ matrix.target }})
      uses: edgedb/edgedb-pkg/integration/linux/testpublished/centos-8@master
      if: matrix.target == 'centos-8'
      env:
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"


    - uses: actions/checkout@v1
      with:
        repository: edgedb/edgedb-docker
        ref: master
        path: edgedb/dockerfile

    - name: Publish Docker Image (${{ matrix.target }})
      uses: elgohr/Publish-Docker-Github-Action@2.6
      if: matrix.target == 'debian-stretch'
      with:
        name: edgedb/edgedb:${{ steps.describe.outputs.version-slot }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        snapshot: true
        workdir: dockerfile
        buildargs: version=${{ steps.describe.outputs.version-slot }}

  publish-macos:
    needs: [build-linux, build-macos]
    runs-on: macos-latest
    strategy:
      max-parallel: 4
      matrix:
        target: [
          macos-x86_64,
        ]
        include:
          - target: macos-x86_64
            platform: macos
            platform_version: x86_64

    steps:
    - uses: actions/download-artifact@v1
      with:
        name: builds-${{ matrix.target }}
        path: artifacts/${{ matrix.target }}

    - uses: actions/checkout@v1
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb/edgedb-pkg

    - name: Describe
      id: describe
      uses: edgedb/edgedb-pkg/integration/actions/describe-artifact@master
      with:
        target: "${{ matrix.target }}"

    - name: Publish (${{ matrix.target }})
      env:
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "${{ matrix.platform }}"
        PKG_PLATFORM_VERSION: "${{ matrix.platform_version }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"
      run: |
        edgedb-pkg/integration/macos/publish.sh

