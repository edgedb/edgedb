abstract type Named:
    required property name -> str:
        delegated constraint unique


abstract link deck:
    property count -> int


abstract link friends:
    property nickname -> str
    # how the friend responded to requests for a favor
    #property favor -> array<bool>


type User extending Named:
    link deck -> Card:
        cardinality := '**'

    property deck_cost := sum(__self__.deck.cost)

    link friends -> User:
        cardinality := '**'


type Card extending Named:
    required property element -> str
    required property cost -> int
    link owners := __self__.<deck[IS User]


type SpecialCard extending Card
