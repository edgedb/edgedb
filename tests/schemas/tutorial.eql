#
# This source file is part of the EdgeDB open source project.
#
# Copyright 2016-present MagicStack Inc. and the EdgeDB authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


INSERT User {
    login := 'alice',
    firstname := 'Alice',
    lastname := 'Liddell',
};

INSERT User {
    login := 'bob',
    firstname := 'Bob',
    lastname := 'Sponge',
};

INSERT User {
    login := 'carol',
    firstname := 'Carol',
    lastname := 'Danvers',
};

INSERT User {
    login := 'dave',
    firstname := 'Dave',
    lastname := 'Bowman',
};


WITH
    A := (SELECT User FILTER .login = 'alice'),
    B := (SELECT User FILTER .login = 'bob')
INSERT PullRequest {
    title := 'Avoid attaching multiple scopes at once',
    status := 'Merged',
    author := A,
    assignees := B,
    body := "Sublime Text and Atom handles multiple scopes differently.",
    created_on := <datetime>'Feb 1, 2016, 5:29PM',
    comments := {
        (INSERT Comment {
            author := A,
            body :=
                "Sublime Text handles whitespace-separated scope list " +
                "pretty well, but Atom (or the 'first-mate' library to be " +
                "precise) would fail to do that.",
            created_on := <datetime>'Feb 1, 2016, 5:31 PM UTC',
        }),
        (INSERT Comment {
            author := B,
            body :=
                "Thanks for catching that. We'll make sure to follow this " +
                "practice.",
            created_on := <datetime>'Feb 2, 2016, 12:47 PM UTC',
        }),
        (INSERT Comment {
            author := A,
            body := "You're welcome. Thanks for the awesome package!",
            created_on := <datetime>'Feb 2, 2016, 12:48 PM UTC',
        }),
    }
};


WITH
    B := (SELECT User FILTER .login = 'bob'),
    C := (SELECT User FILTER .login = 'carol'),
    D := (SELECT User FILTER .login = 'dave')
INSERT PullRequest {
    title := 'Pyhton -> Python',
    status := 'Merged',
    author := C,
    assignees := {B, D},
    body := "Several typos fixed.",
    created_on := <datetime>'Apr 25, 2016, 6:57 PM UTC',
    comments := {
        (INSERT Comment {
            author := C,
            body := "Couple of typos are fixed. Updated VS count.",
            created_on := <datetime>'Apr 25, 2016, 6:58 PM UTC',
        }),
        (INSERT Comment {
            author := B,
            body := "Thanks for catching the typo.",
            created_on := <datetime>'Apr 25, 2016, 7:11 PM UTC',
        }),
        (INSERT Comment {
            author := D,
            body := "Thanks!",
            created_on := <datetime>'Apr 25, 2016, 7:22 PM UTC',
        }),
    }
};


WITH
    B := (SELECT User FILTER .login = 'bob'),
    C := (SELECT User FILTER .login = 'carol')
INSERT PullRequest {
    title := 'Highlight type hint stub files',
    status := 'Merged',
    author := B,
    assignees := C,
    body := "",
    created_on := <datetime>'Jun 28, 2016, 7:31 PM UTC',
    comments := {
        (INSERT Comment {
            author := B,
            body := "Highlight type hint stub files.",
            created_on := <datetime>'Jun 28, 2016, 7:32 PM UTC',
        }),
        (INSERT Comment {
            author := C,
            body := "Good idea! Thanks.",
            created_on := <datetime>'Jun 28, 2016, 8:01 PM UTC',
        }),
        (INSERT Comment {
            author := C,
            body := "I've released v0.5.12 with this patch.",
            created_on := <datetime>'Jun 28, 2016, 8:03 PM UTC',
        }),
    }
};


WITH
    A := (SELECT User FILTER .login = 'alice'),
    B := (SELECT User FILTER .login = 'bob'),
    C := (SELECT User FILTER .login = 'carol')
INSERT PullRequest {
    title := 'Make file types consistent between grammars/ and package.json',
    status := 'Merged',
    author := A,
    assignees := C,
    body := "",
    created_on := <datetime>'Nov 22, 2016, 2:26 PM UTC',
    comments := {
        (INSERT Comment {
            author := A,
            body :=
                "This made .pyi, .gyp, and .gypi available in all editors.",
            created_on := <datetime>'Nov 22, 2016, 2:27 PM UTC',
        }),
        (INSERT Comment {
            author := C,
            body := "Thanks! I'll make a release right now (enjoy f-strings!)",
            created_on := <datetime>'Nov 22, 2016, 2:32 PM UTC',
        }),
        (INSERT Comment {
            author := A,
            body := "If you can hold on, I have a few other things in mind :-)",
            created_on := <datetime>'Nov 22, 2016, 2:33 PM UTC',
        }),
        (INSERT Comment {
            author := C,
            body := "Go ahead :)",
            created_on := <datetime>'Nov 22, 2016, 2:34 PM UTC',
        }),
        (INSERT Comment {
            author := A,
            body := "Also, I didn't add wsgi files here.",
            created_on := <datetime>'Nov 22, 2016, 2:35 PM UTC',
        }),
        (INSERT Comment {
            author := B,
            body := ".wsgi file extension is still missing",
            created_on := <datetime>'Dec 7, 2016, 8:54 AM UTC',
        }),
        (INSERT Comment {
            author := A,
            body :=
                "Rebase your diff and make sure to add the extension in " +
                "both places.",
            created_on := <datetime>'Dec 8, 2016, 4:20 PM UTC',
        }),
    }
};


WITH
    B := (SELECT User FILTER .login = 'bob'),
    D := (SELECT User FILTER .login = 'dave')
INSERT PullRequest {
    title := 'Tokenize `@` in decorators',
    status := 'Open',
    author := B,
    assignees := D,
    body := "Fixes an issue with `@`",
    created_on := <datetime>'Nov 13, 2017, 12:39 PM UTC',
    comments := {
        (INSERT Comment {
            author := B,
            body := "@ now has its own scope",
            created_on := <datetime>'Nov 13, 2017, 12:40 PM UTC',
        }),
        (INSERT Comment {
            author := B,
            body := "I have the same build failure on master",
            created_on := <datetime>'Nov 13, 2017, 1:04 PM UTC',
        }),
        (INSERT Comment {
            author := B,
            body := "Should I submit a PR to fix the CI build?",
            created_on := <datetime>'Nov 15, 2017, 12:50 PM UTC',
        }),
    }
};


WITH
    C := (SELECT User FILTER .login = 'carol'),
    D := (SELECT User FILTER .login = 'dave')
INSERT PullRequest {
    title := 'Add support for Snakemake files',
    status := 'Open',
    author := C,
    assignees := D,
    body := "",
    created_on := <datetime>'Jan 24, 2018, 6:19 PM UTC',
    comments := {
        (INSERT Comment {
            author := C,
            body :=
                "This PR adds support for Python syntax highlighting in " +
                ".smk files, which are used by Snakemake.",
            created_on := <datetime>'Jan 24, 2018, 6:20 PM UTC',
        }),
    }
};


UPDATE
    User
FILTER
    User.login = 'dave'
SET {
    todo := (
        SELECT PullRequest {
            @weight :=
                1 IF PullRequest.title = 'Tokenize `@` in decorators' ELSE 2
        } FILTER PullRequest.title IN {
            'Tokenize `@` in decorators',
            'Add support for Snakemake files',
        }
    )
};


WITH
    U2 := User
UPDATE
    User
FILTER
    User.login = 'alice'
SET {
    followees := (
        SELECT U2 FILTER U2 != User
    )
};


WITH
    U2 := User
UPDATE
    User
FILTER
    User.login = 'carol'
SET {
    followees := (
        SELECT U2 FILTER U2.login = {'alice', 'bob'}
    )
};


WITH
    U2 := User
UPDATE
    User
FILTER
    User.login = 'dave'
SET {
    followees := (
        SELECT U2 FILTER U2.login = {'bob', 'carol'}
    )
};
