
v6.0
====

:edb-alt-title: EdgeDB v6

To play with the new features, make sure to specify version 6.0 when
initializing the project as pre-release versions are not considered stable
and will not be automatically suggested:

.. code-block:: bash

  $ edgedb project init --to-testing


Upgrading
=========

**Local and Cloud instances**

To upgrade a local project, first ensure that your CLI is up to date with
``edgedb cli upgrade``. Then run the following command inside the project
directory.

.. code-block:: bash

  $ edgedb project upgrade

Alternatively, specify an instance name if you aren't using a project.

.. code-block:: bash

  $ edgedb instance upgrade -I my_instance

The CLI will first check to see if your schema will migrate cleanly to EdgeDB
6.0. If the upgrade check finds any problems, it will report them back to you.

**Hosted instances**

To upgrade a remote (hosted) instance, we recommend the following
dump-and-restore process.

1. EdgeDB v6.0 supports PostgreSQL 14 (or above). So check the version of
   PostgreSQL you are using before upgrading EdgeDB. If you're using Postgres
   13 or below, you should upgrade Postgres first.

2. Spin up an empty 6.0 instance. You can use one of our :ref:`deployment
   guides <ref_guide_deployment>`.

   Under Debian/Ubuntu, when adding the EdgeDB package repository, use this
   command instead:

   .. code-block:: bash

       $ echo deb [signed-by=/usr/local/share/keyrings/edgedb-keyring.gpg] \
           https://packages.edgedb.com/apt \
           $(grep "VERSION_CODENAME=" /etc/os-release | cut -d= -f2) main \
           | sudo tee /etc/apt/sources.list.d/edgedb.list

   Use this command for installation under Debian/Ubuntu:

   .. code-block:: bash

       $ sudo apt-get update && sudo apt-get install edgedb-6

   Under CentOS/RHEL, use this installation command:

   .. code-block:: bash

       $ sudo yum install edgedb-6

   In any required ``systemctl`` commands, replace ``edgedb-server-6`` with
   ``edgedb-server-6``.

   Under any Docker setups, supply the ``6.0`` tag.

3. Take your application offline, then dump your v4.x database with the CLI

   .. code-block:: bash

       $ edgedb dump --dsn <old dsn> --all --format dir my_database.dump/

   This will dump the schema and contents of your current database to a
   directory on your local disk called ``my_database.dump``. The directory name
   isn't important.

4. Restore the empty v6.x instance from the dump

   .. code-block:: bash

       $ edgedb restore --all my_database.dump/ --dsn <new dsn>

   Once the restore is complete, update your application to connect to the new
   instance.

   This process will involve some downtime, specifically during steps 2 and 3.


New features
============


Additional changes
==================


Bug fixes
---------
