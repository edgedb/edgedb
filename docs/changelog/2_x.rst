==
v2
==

:edb-alt-title: EdgeDB v2—Sagittarius

.. warning::

    This document is a work in progress and will keep being updated
    until the v2 release on July 28th 2022.

EdgeDB 2.0 RC1 was released to the "stable" channel on July 14th, 2022.

We would like to thank our community for reporting issues and
contributing fixes. You are awesome! ❤️


.. TODO: add illustration once it's ready


Release Highlights
==================

Integrated GUI
--------------

EdgeDB v2 ships with a built-in rich graphical user inteface that can be
accessed by typing the ``edgedb ui`` command in your terminal. The command
opens the UI for the current project (or manually specified) instance
in the default system browser.

The current iteration of the GUI has a REPL, a schema introspection and
visualization pane, as well as a comprehensive data browser and editor.

.. image:: images/v2_ui.jpg
    :width: 100%


GROUP BY
--------

The new :ref:`GROUP BY <ref_eql_group>` expression can be used to partition
and aggregate data.  The output of ``GROUP BY`` are free objects that contain
the aggregated elements, as well as additional information such as the
grouping key and and fields:

.. code-block:: edgeql-repl

  db> group Movie { title } by .release_year;
  {
    {
      key: {release_year: 2017},
      grouping: {'release_year'},
      elements: {
  default::Movie {title: 'Guardians of the Galaxy Vol. 2'},
  default::Movie {title: 'Spider-Man: Homecoming'},
  default::Movie {title: 'Thor: Ragnarok'},
      },
    },
    {
      key: {release_year: 2013},
      grouping: {'release_year'},
      elements: {
  default::Movie {title: 'Iron Man 3'},
  default::Movie {title: 'Thor: The Dark World'},
      },
    },
    ...
  }

Read more about ``GROUP BY`` in the `RFC 1009 <group_>`_. Browse the
:ref:`relevant documentation <ref_eql_group>` for more details and examples.


Global variables and access policies
------------------------------------

.. TODO:  add doc links

* Introduce global variables (`RFC 1010 <globals_>`_).
  Globals may be set with a ``SET GLOBAL`` command or via language
  bindings.

* Support access policies on object types (`RFC 1011 <acls_>`_).
  When combined with global variables, access policies can be used to
  push authorization logic into the database.


Other changes
-------------

EdgeQL
^^^^^^

* Add "range types" representing *intervals* of values
  (`RFC 1012 <range_>`_).

  .. TODO: EXAMPLE; add a link to docs

* Support many more arithmetic operations on local date and time types
  (`RFC 1013 <dates_>`_).

  .. TODO: add a link to docs

* Add ``ON SOURCE DELETE DELETE TARGET`` and
  ``ON SOURCE DELETE DELETE TARGET IF ORPHAN`` to implement cascading
  deletion.

  .. TODO: EXAMPLE, docs

* Support specifying ``id`` explicitly when inserting objects
  (:eql:gh:`#3895`). This can be useful when migrating data from
  an existing database.

* Support partial constraints and indexes (:eql:gh:`#3949`,
  :ref:`docs <ref_datamodel_constraints_partial>`).


Server
^^^^^^

* Support socket activation to reduce memory footprint on developer
  machines (:eql:gh:`#3899`).

* Introduce edgedb+http, a which tunnels the binary protocol over HTTP
  using JWT for authentication (:eql:gh:`#3979`).

* Support using JWT to authenticate to local instances (:eql:gh:`#3991`).


Bug Fixes
^^^^^^^^^

* Generate unique ``id`` fields for each free shape object,
  and don't use an actual in-database object to represent it,
  and make multiplicity inference understand free shapes better
  (:eql:gh:`#3631`, :eql:gh:`#3633`, :eql:gh:`#3634`).

* Fail if local Postgres cluster fails to start.

* add ``cfg::memory`` to base types descriptor IDs table (:eql:gh:`#3882`).

* Fix a cross-type exclusive constraint bug that could allow exclusive
  constraints to be violated in some complex type hierarchies
  (:eql:gh:`#3887`).

* Fix issue wehre server might attempt to acquire one more connection
  than it is configured to permit (:eql:gh:`#3901`).

* Fix use of assert_exists on properties that are being directly output
  (:eql:gh:`#3911`).

* Fix a scope leakage that could cause a link referenced inside a computable
  to improperly correlate with something outside the computable
  (:eql:gh:`#3912`).

* Fix a number of issues with the floordiv (``//``) and modulus (``%``)
  operators where we could return incorrect values or produce spurious
  errors, especially on very large values (:eql:gh:`#3909`).

* Make annotations a valid annotation subject (:eql:gh:`#3929`).

* Expose ``body`` and ``language`` fields on ``schema::Function``
  (:eql:gh:`#3944`).

* Make indexes extend from ``schema::InheritingObject`` (:eql:gh:`#3942`)

* Fix some miscompilations of nested shapes inside calls to functions
  like ``assert_single`` (:eql:gh:`#3927`).

* Fix ``SET TYPE`` on properties with default values (:eql:gh:`#3954`).

* Fix ``describe``/``populate``/``describe`` sequence (:eql:gh:`#3959`).

* Upgrade many casts and functions from "Stable" to "Immutable"
  (:eql:gh:`#3975`)

* Fix linkprops in type filtered shape links (:eql:gh:`#3987`).

* Allow DML statements in free shapes (:eql:gh:`#4002`).

* Allow customizing assertion messages in ``assert_exists`` and friends
  (:eql:gh:`#4019`).

Protocol Overhaul
^^^^^^^^^^^^^^^^^

* A new version of the protocol---version 1.0---has been introduced.
  It eliminates all server state associated with connections that
  do not use transactions.

* Support passing parameters to and returning values from multi-statement
  scripts.

.. lint-off

.. _group:
    https://github.com/edgedb/rfcs/blob/master/text/1009-group.rst
.. _globals:
    https://github.com/edgedb/rfcs/blob/master/text/1010-global-vars.rst
.. _acls:
    https://github.com/edgedb/rfcs/blob/master/text/1011-object-level-security.rst
.. _range:
    https://github.com/edgedb/rfcs/blob/master/text/1012-range-types.rst
.. _dates:
    https://github.com/edgedb/rfcs/blob/master/text/1013-datetime-arithmetic.rst
.. _v2anno:
    https://www.edgedb.com/blog/edgedb-2-0

.. lint-on
