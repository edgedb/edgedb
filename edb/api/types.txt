#
# This source file is part of the EdgeDB open source project.
#
# Copyright 2016-present MagicStack Inc. and the EdgeDB authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


# IMPORTANT: synchronize any changes with docs/internal/protocol/types.rst.


# Types encoding in EdgeDB binary protocol:
#
#    set:           <type=0> <uuid> <pos>
#
#    shape:         <type=1> <uuid>
#                            <count> [<flags> <str> <pos>]+
#
#                   -- where <flags> is 1 byte;
#                      * 1 << 0 bit: the field wasn't explicitly requested
#                                    (e.g. "id" or "__type__")
#                      * 1 << 1 bit: the field is a link property
#                      * 1 << 2 bit: the field is a link
#
#    base scalar:   <type=2> <uuid>
#
#    scalar:        <type=3> <uuid> <pos>
#
#    tuple:         <type=4> <uuid> <count> [<pos>]*
#
#    namedtuple:    <type=5> <uuid> <count> [<str> <pos>]+
#
#    array:         <type=6> <uuid> <pos> <count> <int32>+
#
#                   -- where <count> specifies the number of dimensions
#                      and must be >= 1, it is followed by <count> of
#                      int32 values specifying the cardinality of each
#                      dimension (-1 means an unbounded dimension).
#
#    enum:          <type=7> <uuid> <count> <str>+
#
#    type_anno      <type=f0..ff> <uuid> <str>
#
#                   -- A type annotation;  0xf0 <= <type> <= 0xff.
#                      Drivers should ignore unknown type annotations.
#
#
# where:
#
#    <pos>         2 bytes (uint16) position of the type in the description
#    <type>        1 byte  (uint8)
#    <count>       2 bytes (uint16)
#    <str>         2 bytes (uint16) length; followed by chars


# Base scalar types:

00000000-0000-0000-0000-000000000001 anytype
00000000-0000-0000-0000-000000000002 anytuple

00000000-0000-0000-0000-0000000000F0 std
00000000-0000-0000-0000-0000000000FF empty-tuple

00000000-0000-0000-0000-000000000100 std::uuid
00000000-0000-0000-0000-000000000101 std::str
00000000-0000-0000-0000-000000000102 std::bytes
00000000-0000-0000-0000-000000000103 std::int16
00000000-0000-0000-0000-000000000104 std::int32
00000000-0000-0000-0000-000000000105 std::int64
00000000-0000-0000-0000-000000000106 std::float32
00000000-0000-0000-0000-000000000107 std::float64
00000000-0000-0000-0000-000000000108 std::decimal
00000000-0000-0000-0000-000000000109 std::bool
00000000-0000-0000-0000-00000000010A std::datetime
00000000-0000-0000-0000-00000000010B std::local_datetime
00000000-0000-0000-0000-00000000010C std::local_date
00000000-0000-0000-0000-00000000010D std::local_time
00000000-0000-0000-0000-00000000010E std::duration
00000000-0000-0000-0000-00000000010F std::json
