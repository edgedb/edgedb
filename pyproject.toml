[project]
name = "edgedb-server"
description = "EdgeDB Server"
requires-python = '>=3.11.0'
dynamic = ["version"]
dependencies = [
    'edgedb==1.9.0',

    'httptools>=0.6.0',
    'immutables>=0.18',
    'parsing~=2.0',
    'uvloop~=0.19.0',

    'click~=8.0',
    'cryptography~=42.0',
    'graphql-core~=3.1.5',
    'jwcrypto~=1.3.1',
    'psutil~=5.8',
    'setproctitle~=1.2',

    'httpx~=0.24.1',
    'hishel==0.0.24',
    'webauthn~=2.0.0',
    'argon2-cffi~=23.1.0',
    'aiosmtplib~=2.0',
]

[project.scripts]
edgedb-server = "edb.server.main:main"
edb = "edb.tools.edb:edbcommands"
edgedb = "edb.cli:rustcli"

[project.optional-dependencies]
test = [
    'black~=24.2.0',
    'coverage~=7.4',
    'ruff~=0.1.6',
    'asyncpg~=0.29.0',

    # Needed for testing asyncutil
    'async_solipsism==0.5.0',

    # Needed for test_docs_sphinx_ext
    'requests-xml~=0.2.3',

    # For rebuilding GHA workflows
    'Jinja2~=2.11',
    'MarkupSafe~=1.1',
    'PyYAML~=6.0',

    'mypy~=1.7.1',
    # mypy stub packages; when updating, you can use mypy --install-types
    # to install stub packages and then pip freeze to read out the specifier
    'types-docutils~=0.17.0,<0.17.6', # incomplete nodes.document.__init__
    'types-Jinja2~=2.11',
    'types-MarkupSafe~=1.1',
    'types-pkg-resources~=0.1.3',
    'types-typed-ast~=1.4.2',
    'types-requests~=2.25.6',
    'types-PyYAML~=6.0',

    'prometheus_client~=0.11.0',

    'docutils~=0.17.0',
    'lxml~=4.9.0',
    'Pygments~=2.10.0',
    'Sphinx~=4.2.0',
    'sphinxcontrib-asyncio~=0.3.0',
    'sphinxcontrib-applehelp<1.0.8',
    'sphinxcontrib-devhelp<1.0.6',
    'sphinxcontrib-htmlhelp<2.0.5',
    'sphinxcontrib-serializinghtml<1.1.10',
    'sphinxcontrib-qthelp<1.0.7',
    'sphinx_code_tabs~=0.5.3',
]

docs = [
    'docutils~=0.17.0',
    'lxml~=4.9.0',
    'Pygments~=2.10.0',
    'Sphinx~=4.2.0',
    'sphinxcontrib-asyncio~=0.3.0',
    'sphinx_code_tabs~=0.5.3',
]

[build-system]
requires = [
    "Cython (>=0.29.32, <0.30.0)",
    "packaging >= 21.0",
    "setuptools >= 67",
    "setuptools-rust ~= 1.8",
    "wheel",

    "parsing ~= 2.0",
    'edgedb == 1.9.0',
]
# Custom backend needed to set up build-time sys.path because
# setup.py needs to import `edb.buildmeta`.
build-backend = "build_backend"
backend-path = ["."]

[tool.setuptools]
packages = { find = { include = ["edb", "edb.*"] } }
zip-safe = false


# ========================
#          BLACK
# ========================
[tool.black]
line-length = 80
target-version = ["py310"]
skip-string-normalization = true


# ========================
#          MYPY
# ========================

[tool.mypy]
python_version = "3.11"
plugins = "edb/tools/mypy/plugin.py"
follow_imports = "normal"
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_configs = true
show_column_numbers = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "edb.common.adapter",
    "edb.edgeql.compiler.*",
    "edb.edgeql.codegen",
    "edb.edgeql.declarative",
    "edb.edgeql.tracer",
    "edb.graphql.types",
    "edb.ir.*",
    "edb.pgsql.metaschema",
    "edb.pgsql.codegen",
    "edb.pgsql.types",
    "edb.pgsql.compiler.*",
    "edb.repl.*",
    "edb.schema.*",
    "edb.schema.reflection.*",
    "edb.server.cluster",
    "edb.server.config",
    "edb.server.connpool.*",
    "edb.server.pgcluster",
    "edb.server.pgconnparams",
    "edb.server.compiler.*",
]
# Equivalent of --strict on the command line,
# but without disallow_untyped_calls:
disallow_subclassing_any = true
disallow_any_generics = true
# disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "edb.common.checked",
    "edb.common.compiler",
    "edb.common.ordered",
    "edb.common.parametric",
    "edb.common.retryloop",
    "edb.common.struct",
    "edb.common.topological",
    "edb.common.uuidgen",
    "edb.common.value_dispatch",
]
# Equivalent of --strict on the command line:
disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true


# ========================
#        COVERAGE
# ========================
[tool.coverage.run]
branch = false
plugins = ["Cython.Coverage"]
parallel = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if debug",
    "raise NotImplementedError",
    "if __name__ == .__main__.",
]
show_missing = true
ignore_errors = true

# Change the below to invalidate dependency cache in CI
# CACHE-TAG: 1

[tool.ruff]
lint.select = ["E", "F", "B"]
lint.ignore = [
    "F541",
    "B008",
    "B904",
    "B905",
    "B019",
    "E731",
    "E741",
]
line-length = 80
indent-width = 4
target-version = "py310"
exclude = ["postgres", ".github"]
