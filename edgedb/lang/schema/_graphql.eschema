##
# Copyright (c) 2018 MagicStack Inc.
# All rights reserved.
#
# See LICENSE for details.
##


scalar type typeKind extending str:
     constraint enum(['SCALAR', 'OBJECT', 'INTERFACE', 'UNION', 'ENUM',
                      'INPUT_OBJECT', 'LIST', 'NON_NULL'])

scalar type directiveLocation extending str:
     constraint enum(['QUERY', 'MUTATION', 'FIELD', 'FRAGMENT_DEFINITION',
                      'FRAGMENT_SPREAD', 'INLINE_FRAGMENT'])

abstract type Nameable:
    property name -> str
    property description -> str

abstract type Named extending Nameable:
    required inherited property name -> str

abstract type Deprecatable:
    required property isDeprecated -> bool
    property deprecationReason -> str

abstract type Callable:
    link args -> InputValue:
        cardinality := '1*'

abstract type Typed:
    # not required for the moment
    link type -> _Type:
        cardinality := '*1'

type _Type extending Nameable:
    required property kind -> typeKind

type Field extending Named, Deprecatable, Callable

type InputValue extending Named:
    property defaultValue -> str

type EnumValue extending Named, Deprecatable

type Directive extending Named, Callable:
    required property locations -> directiveLocation:
        cardinality := '1*'

type Schema extending Named:
    # not required for the moment
    link types -> _Type:
        cardinality := '**'
    link queryType -> _Type:
        cardinality := '*1'
    link mutationType -> _Type:
        cardinality := '*1'
    link directives -> Directive:
        cardinality := '**'

type Query extending Named

type Mutation extending Named
